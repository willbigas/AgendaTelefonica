package br.com.view;

import br.com.agendatelefonica.PrincipalAgenda;
import br.com.dao.ContatoDao;
import br.com.dao.TelefoneDao;
import br.com.dao.TipoContatoDao;
import br.com.daoImpl.ContatoDaoImpl;
import br.com.daoImpl.TelefoneDaoImpl;
import br.com.daoImpl.TipoContatoDaoImpl;
import br.com.entidade.Contato;
import br.com.entidade.Telefone;
import br.com.entidade.TipoContato;
import br.com.negocio.ManterContatoNegocio;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author William
 */
public class JanelaContatoCadastro extends javax.swing.JPanel {

    private Integer IDALTERACAO = null;
    private static Contato CONTATO_ATUAL = new Contato();
    private static ContatoDao contatoDao = new ContatoDaoImpl();
    private static TipoContatoDao tipoContatoDao = new TipoContatoDaoImpl();
    private static TelefoneDao telefoneDao = new TelefoneDaoImpl();
    private static List<Telefone> TELEFONES_DO_CONTATO = new ArrayList<>();

    /**
     * Creates new form FormularioContato
     */
    public JanelaContatoCadastro(Contato c) throws Exception {
        initComponents();
        tabelaTelefone.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabelaTelefone.getColumnModel().getColumn(1).setPreferredWidth(200);

        TELEFONES_DO_CONTATO = telefoneDao.pesquisarTelefoneContatos(c);
        pegandoTipoContatoDoBanco();
        CONTATO_ATUAL = c;
        if (c != null) {
            adicionarListaTeleFonesTabela(telefoneDao.pesquisarTelefoneContatos(c));
            try {
                comboTipoContato.setSelectedItem(c.getTipoContato().getNome());
                campoNome.setText(c.getNome());
                campoNascimento.setText(br.com.utilpacket.Util_Format.data(c.getNascimento()));
                campoEmail.setText(c.getEmail());
                IDALTERACAO = c.getId();
            } catch (Exception exception) {
            }
        }

        List<Telefone> telefones = ManterContatoNegocio.pesquisarTelefones("");

    }

    private void pegandoTipoContatoDoBanco() throws HeadlessException {
        List<TipoContato> TIPO_CONTATO = new ArrayList<>();
        try {
            List<?> list = tipoContatoDao.pesquisarTodos();
            TIPO_CONTATO = (List<TipoContato>) (Object) list;
            for (TipoContato tipoContato : TIPO_CONTATO) {
                comboTipoContato.addItem(tipoContato.getNome());
            }
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, "Problemas no Banco" + exception.getStackTrace());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tituloContato = new javax.swing.JLabel();
        textoNome = new javax.swing.JLabel();
        textoNascimento = new javax.swing.JLabel();
        textoEmail = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoEmail = new javax.swing.JTextField();
        buttonGravarContato = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        campoDdd1 = new javax.swing.JTextField();
        campoTelefone1 = new javax.swing.JTextField();
        textoTelefone1 = new javax.swing.JLabel();
        textoDdd1 = new javax.swing.JLabel();
        buttonExcluirTelefone = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTelefone = new javax.swing.JTable();
        buttonAdicionarTelefone = new javax.swing.JButton();
        textoTipoContato = new javax.swing.JLabel();
        comboTipoContato = new javax.swing.JComboBox<>();
        buttonSair = new javax.swing.JButton();
        campoNascimento = new javax.swing.JFormattedTextField();

        setLayout(new java.awt.GridBagLayout());

        tituloContato.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tituloContato.setText("CADASTRAR / EDITAR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        add(tituloContato, gridBagConstraints);

        textoNome.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        textoNome.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(textoNome, gridBagConstraints);

        textoNascimento.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        textoNascimento.setText("Nascimento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(textoNascimento, gridBagConstraints);

        textoEmail.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        textoEmail.setText("E-mail:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(textoEmail, gridBagConstraints);

        campoNome.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 4, 6, 4);
        add(campoNome, gridBagConstraints);

        campoEmail.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 4, 6, 4);
        add(campoEmail, gridBagConstraints);

        buttonGravarContato.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        buttonGravarContato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_gravar_24x24.png"))); // NOI18N
        buttonGravarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGravarContatoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        add(buttonGravarContato, gridBagConstraints);
        add(jLabel7, new java.awt.GridBagConstraints());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefone"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        campoDdd1.setColumns(3);
        campoDdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDdd1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 34, 2, 1);
        jPanel2.add(campoDdd1, gridBagConstraints);

        campoTelefone1.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 22, 2, 93);
        jPanel2.add(campoTelefone1, gridBagConstraints);

        textoTelefone1.setText("TELEFONE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 84, 2, 1);
        jPanel2.add(textoTelefone1, gridBagConstraints);

        textoDdd1.setText("DDD");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 1, 2, 1);
        jPanel2.add(textoDdd1, gridBagConstraints);

        buttonExcluirTelefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_excluirTelefone_24x24.png"))); // NOI18N
        buttonExcluirTelefone.setPreferredSize(new java.awt.Dimension(40, 40));
        buttonExcluirTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirTelefoneActionPerformed(evt);
            }
        });
        buttonExcluirTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonExcluirTelefoneKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 36, 4, 12);
        jPanel2.add(buttonExcluirTelefone, gridBagConstraints);

        tabelaTelefone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ddd", "Telefone"
            }
        ));
        tabelaTelefone.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tabelaTelefone.setName(""); // NOI18N
        jScrollPane1.setViewportView(tabelaTelefone);
        if (tabelaTelefone.getColumnModel().getColumnCount() > 0) {
            tabelaTelefone.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        buttonAdicionarTelefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_adicionarTelefone_24x24.png"))); // NOI18N
        buttonAdicionarTelefone.setPreferredSize(new java.awt.Dimension(40, 40));
        buttonAdicionarTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdicionarTelefoneActionPerformed(evt);
            }
        });
        buttonAdicionarTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonAdicionarTelefoneKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 37, 4, 58);
        jPanel2.add(buttonAdicionarTelefone, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jPanel2, gridBagConstraints);

        textoTipoContato.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        textoTipoContato.setText("Tipo de Contato");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(textoTipoContato, gridBagConstraints);

        comboTipoContato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione Tipo" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        add(comboTipoContato, gridBagConstraints);

        buttonSair.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        buttonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_voltar_24x24.png"))); // NOI18N
        buttonSair.setMaximumSize(new java.awt.Dimension(85, 36));
        buttonSair.setMinimumSize(new java.awt.Dimension(85, 36));
        buttonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSairActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.insets = new java.awt.Insets(7, 248, 0, 0);
        add(buttonSair, gridBagConstraints);

        campoNascimento.setColumns(9);
        try {
            campoNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(campoNascimento, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonGravarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGravarContatoActionPerformed
        if (campoNome.getText().isEmpty() || campoNascimento.getText().isEmpty()
                || campoEmail.getText().isEmpty()
                || comboTipoContato.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
        } else {
            try {
                Contato c = new Contato();

                /**
                 * Pegando Tipo de Contato da Combo box
                 */
                TipoContato tipoContato = new TipoContato();

                String tipoContatoSelecionado = (String) comboTipoContato.getSelectedItem();
                List<?> OBJECTS = tipoContatoDao.pesquisarTodos();
                List<TipoContato> TIPOCONTATO = (List<TipoContato>) (Object) OBJECTS;
                c.setTipoContato(null);
                for (int i = 0; i < TIPOCONTATO.size(); i++) {
                    TipoContato get = TIPOCONTATO.get(i);
                    if (get.getNome().equals(tipoContatoSelecionado)) {
                        tipoContato.setId(get.getId());
                        tipoContato.setNome(get.getNome());
                        c.setTipoContato(tipoContato);
                    }
                }

                /**
                 * Pegando atributos de contato
                 */
                c.setNascimento(br.com.utilpacket.Util_Format.data(campoNascimento.getText()));
                c.setNome(campoNome.getText());
                c.setEmail(campoEmail.getText());
                c.setId(IDALTERACAO);
                /**
                 * Primeiro telefone
                 */
                /**
                 * Segundo telefone
                 */
                /**
                 * Adicionando na lista
                 */
                c.setTelefones(TELEFONES_DO_CONTATO);
                Contato objPesquisado = (Contato) contatoDao.pesquisar(c.getId());

                if (objPesquisado != null) {
                    contatoDao.update(c);
                    JOptionPane.showMessageDialog(this, "Contato atualizado!");
                    resetandoCampos();
                    PrincipalAgenda.JanelaPrincipalContato();
                } else {
                    boolean inserido = contatoDao.inserir(c);
                    if (inserido) {
                        JOptionPane.showMessageDialog(this, "Contato salvo!");
                        resetandoCampos();
                        PrincipalAgenda.JanelaPrincipalContato();
                    } else {
                        JOptionPane.showMessageDialog(this, "Problemas ao inserir");
                    }
                }

            } catch (Exception exception) {
                try {
                    resetandoCampos();
                    PrincipalAgenda.JanelaPrincipalContato();
                } catch (Exception exception1) {
                }
            }
        }
    }//GEN-LAST:event_buttonGravarContatoActionPerformed

    public void resetandoCampos() {
        comboTipoContato.setSelectedIndex(0);
        campoNome.setText(null);
        campoEmail.setText(null);
        campoNascimento.setText(null);
        campoDdd1.setText(null);
        campoTelefone1.setText(null);
    }

    private void campoDdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDdd1ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_campoDdd1ActionPerformed

    private void buttonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSairActionPerformed
        // TODO add your handling code here:
        try {
            PrincipalAgenda.JanelaPrincipalContato();

        } catch (Exception exception) {
        }

    }//GEN-LAST:event_buttonSairActionPerformed

    private void buttonExcluirTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirTelefoneActionPerformed
        // TODO add your handling code here:
        TelefoneDao telefoneDao = new TelefoneDaoImpl();
        int linha = tabelaTelefone.getSelectedRow();
        if (linha >= 0) {
            String numeroContato = (String) tabelaTelefone.getValueAt(linha, 1);
            for (int i = 0; i < TELEFONES_DO_CONTATO.size(); i++) {
                Telefone get = TELEFONES_DO_CONTATO.get(i);
                if (get.getNumero().equals(numeroContato)) {
                    TELEFONES_DO_CONTATO.remove(get);

                }
            }
            adicionarListaTeleFonesTabela(TELEFONES_DO_CONTATO);

        }


    }//GEN-LAST:event_buttonExcluirTelefoneActionPerformed

    private void buttonExcluirTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonExcluirTelefoneKeyPressed

// TODO add your handling code here:
    }//GEN-LAST:event_buttonExcluirTelefoneKeyPressed

    private void buttonAdicionarTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdicionarTelefoneActionPerformed
        // TODO add your handling code here:
        if (campoDdd1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo de DDD para Adicionar um Telefone!");
            return;
        }
        if (campoTelefone1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo de Telefone para Adicionar um Telefone!");
            return;
        } else {
            Telefone telefone1 = new Telefone();
            telefone1.setDdd(campoDdd1.getText());
            telefone1.setNumero(campoTelefone1.getText());
            TELEFONES_DO_CONTATO.add(telefone1);
            adicionarListaTeleFonesTabela(TELEFONES_DO_CONTATO);
        }

    }//GEN-LAST:event_buttonAdicionarTelefoneActionPerformed

    private void buttonAdicionarTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonAdicionarTelefoneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonAdicionarTelefoneKeyPressed

    public void adicionarListaTeleFonesTabela(List<Telefone> Telefones) {
        String[] colunas = {"DDD", "Numero"};
        String[][] dados = new String[Telefones.size()][colunas.length];
        for (int i = 0; i < Telefones.size(); i++) {
            Telefone t = Telefones.get(i);
            dados[i][0] = t.getDdd();
            dados[i][1] = t.getNumero();

        }
        DefaultTableModel modelo = new DefaultTableModel(dados, colunas);
        tabelaTelefone.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdicionarTelefone;
    private javax.swing.JButton buttonExcluirTelefone;
    private javax.swing.JButton buttonGravarContato;
    private javax.swing.JButton buttonSair;
    private javax.swing.JTextField campoDdd1;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JFormattedTextField campoNascimento;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoTelefone1;
    private javax.swing.JComboBox<String> comboTipoContato;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaTelefone;
    private javax.swing.JLabel textoDdd1;
    private javax.swing.JLabel textoEmail;
    private javax.swing.JLabel textoNascimento;
    private javax.swing.JLabel textoNome;
    private javax.swing.JLabel textoTelefone1;
    private javax.swing.JLabel textoTipoContato;
    private javax.swing.JLabel tituloContato;
    // End of variables declaration//GEN-END:variables
}
