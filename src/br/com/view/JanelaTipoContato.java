package br.com.view;

import br.com.agendatelefonica.PrincipalAgenda;
import br.com.dao.TipoContatoDao;
import br.com.daoImpl.TipoContatoDaoImpl;
import br.com.entidade.TipoContato;
import br.com.negocio.ManterContatoNegocio;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author William
 */
public class JanelaTipoContato extends javax.swing.JFrame {

    TipoContatoDao tipoContatoDao = new TipoContatoDaoImpl();

    /**
     * Creates new form FrameTipoContato
     */
    public JanelaTipoContato() {
        initComponents();
        try {

            List<TipoContato> tipoContatos = (List<TipoContato>) (Object) tipoContatoDao.pesquisarTodos();
            adicionarListaTipoContatosTabela(tipoContatos);
        } catch (Exception exception) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTipoContato = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        buttonNovo = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        buttonBuscar = new javax.swing.JButton();
        campoBuscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        tabelaTipoContato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "TIPO DE CONTATO"
            }
        ));
        tabelaTipoContato.setPreferredSize(null);
        jScrollPane1.setViewportView(tabelaTipoContato);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        buttonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_novo_24x24.png"))); // NOI18N
        buttonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNovoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 3, 6, 62);
        jPanel1.add(buttonNovo, gridBagConstraints);

        buttonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_excluir_24x24.png"))); // NOI18N
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 3, 6, 3);
        jPanel1.add(buttonExcluir, gridBagConstraints);

        buttonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_buscar_24x24.png"))); // NOI18N
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        jPanel1.add(buttonBuscar, gridBagConstraints);

        campoBuscar.setColumns(9);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel1.add(campoBuscar, gridBagConstraints);

        jLabel1.setText("BUSCAR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 11);
        jPanel1.add(jLabel1, gridBagConstraints);

        getContentPane().add(jPanel1, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNovoActionPerformed
        // TODO add your handling code here:
        TipoContato tipoContato = new TipoContato();
        String mensagem = JOptionPane.showInputDialog("Digite o nome do Tipo de Contato");
        tipoContato.setNome(mensagem);
        try {

            Boolean tudoOk = tipoContatoDao.inserir(tipoContato);
            if (tudoOk) {
                JOptionPane.showMessageDialog(this, "Tipo de Contato Inserido");

            }
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, "Problemas ao Persistir");
            PrincipalAgenda.JanelaPrincipalTipoContato();
        }
        try {

            List<TipoContato> tipoContatos = (List<TipoContato>) (Object) tipoContatoDao.pesquisarTodos();
            adicionarListaTipoContatosTabela(tipoContatos);
        } catch (Exception exception) {
        }


    }//GEN-LAST:event_buttonNovoActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        // TODO add your handling code here:
        int linha = tabelaTipoContato.getSelectedRow();
        if (linha >= 0) {
            String campoSelecionado = (String) tabelaTipoContato.getValueAt(linha, 0);
            Integer campoIdTipoContatoSelecionado = Integer.valueOf(campoSelecionado);
            try {

                Boolean tudoCerto = tipoContatoDao.excluir(campoIdTipoContatoSelecionado);
                if (tudoCerto) {
                    JOptionPane.showMessageDialog(this, "Tipo de Contato Excluido");
                } else {
                    JOptionPane.showMessageDialog(this, "Existem contatos vinculados a esse tipo de Contato , favor Excluir os Vinculos");
                }
            } catch (Exception exception) {
                JOptionPane.showMessageDialog(this, "Problemas ao Excluir");
            }
        }

        try {

            List<TipoContato> tipoContatos = (List<TipoContato>) (Object) tipoContatoDao.pesquisarTodos();
            adicionarListaTipoContatosTabela(tipoContatos);
        } catch (Exception exception) {
        }

    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed
        // TODO add your handling code here:
        
          List<TipoContato> contatos = null;
        try {
            contatos = ManterContatoNegocio.pesquisarTipoContato(campoBuscar.getText());
        } catch (Exception exception) {
        }
        adicionarListaTipoContatosTabela(contatos);
        
    }//GEN-LAST:event_buttonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaTipoContato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaTipoContato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaTipoContato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaTipoContato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaTipoContato().setVisible(true);
            }
        });
    }

    public void adicionarListaTipoContatosTabela(List<TipoContato> tipoContatos) {
        String[] colunas = {"Codigo", "TipoContato"};
        String[][] dados = new String[tipoContatos.size()][colunas.length];
        for (int i = 0; i < tipoContatos.size(); i++) {
            TipoContato tc = tipoContatos.get(i);
            dados[i][0] = tc.getId().toString();
            dados[i][1] = tc.getNome();
        }
        DefaultTableModel modelo = new DefaultTableModel(dados, colunas);
        tabelaTipoContato.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonNovo;
    private javax.swing.JTextField campoBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaTipoContato;
    // End of variables declaration//GEN-END:variables
}
